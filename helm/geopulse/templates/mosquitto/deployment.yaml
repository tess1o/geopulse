{{- if .Values.mosquitto.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geopulse.fullname" . }}-mosquitto
  labels:
    {{- include "geopulse.mosquitto.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "geopulse.mosquitto.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/entrypoint: {{ include (print $.Template.BasePath "/mosquitto/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "geopulse.mosquitto.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "geopulse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.mosquitto.securityContext | nindent 8 }}
      initContainers:
        # Wait for PostgreSQL to be ready
        - name: wait-for-postgres
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until nc -z {{ include "geopulse.postgres.host" . }} {{ include "geopulse.postgres.port" . }}; do
                echo "PostgreSQL is unavailable - sleeping"
                sleep 2
              done
              echo "PostgreSQL is up - continuing"
      containers:
        - name: mosquitto
          image: {{ include "geopulse.mosquitto.image" . }}
          imagePullPolicy: {{ .Values.mosquitto.image.pullPolicy }}
          command:
            - /bin/sh
            - /entrypoint.sh
            - /usr/sbin/mosquitto
            - -c
            - /mosquitto/config/mosquitto.conf
            - -v
          ports:
            - name: mqtt
              containerPort: 1883
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "geopulse.fullname" . }}-config
            - secretRef:
                name: {{ include "geopulse.secretName" . }}
          volumeMounts:
            - name: entrypoint
              mountPath: /entrypoint.sh
              subPath: entrypoint.sh
            - name: config
              mountPath: /mosquitto/config
            - name: data
              mountPath: /mosquitto/data
            - name: logs
              mountPath: /mosquitto/log
          resources:
            {{- toYaml .Values.mosquitto.resources | nindent 12 }}
      volumes:
        - name: entrypoint
          configMap:
            name: {{ include "geopulse.fullname" . }}-mosquitto-entrypoint
            defaultMode: 0755
        {{- if .Values.mosquitto.persistence.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "geopulse.fullname" . }}-mosquitto-config
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "geopulse.fullname" . }}-mosquitto-data
        - name: logs
          persistentVolumeClaim:
            claimName: {{ include "geopulse.fullname" . }}-mosquitto-logs
        {{- else }}
        - name: config
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: logs
          emptyDir: {}
        {{- end }}
      {{- with .Values.mosquitto.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mosquitto.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mosquitto.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}