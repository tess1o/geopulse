apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geopulse.fullname" . }}-backend
  labels:
    {{- include "geopulse.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "geopulse.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "geopulse.backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "geopulse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.securityContext | nindent 8 }}
      initContainers:
        # Wait for PostgreSQL to be ready
        - name: wait-for-postgres
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready..."
              until nc -z {{ include "geopulse.postgres.host" . }} {{ include "geopulse.postgres.port" . }}; do
                echo "PostgreSQL is unavailable - sleeping"
                sleep 2
              done
              echo "PostgreSQL is up - continuing"
        # Wait for keygen job to complete
        - name: wait-for-keys
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "Waiting for JWT keys to be generated..."
              while [ ! -f /app/keys/jwt-private-key.pem ] || [ ! -f /app/keys/jwt-public-key.pem ] || [ ! -f /app/keys/ai-encryption-key.txt ]; do
                echo "Keys not found - sleeping"
                sleep 2
              done
              echo "Keys found - continuing"
          volumeMounts:
            - name: keys
              mountPath: /app/keys
      containers:
        - name: backend
          image: {{ include "geopulse.backend.image" . }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            {{- if .Values.backend.javaOpts }}
            - name: JAVA_OPTS
              value: {{ .Values.backend.javaOpts | quote }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "geopulse.fullname" . }}-config
            - secretRef:
                name: {{ include "geopulse.secretName" . }}
          {{- if .Values.backend.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.livenessProbe.httpGet.path }}
              port: {{ .Values.backend.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.backend.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.readinessProbe.httpGet.path }}
              port: {{ .Values.backend.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.readinessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: keys
              mountPath: /app/keys
              readOnly: true
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
      volumes:
        - name: keys
          persistentVolumeClaim:
            claimName: {{ include "geopulse.fullname" . }}-keys
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}