{{- if not .Values.secrets.useExistingSecret }}
{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace (include "geopulse.secretName" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "geopulse.secretName" . }}
  labels:
    {{- include "geopulse.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
{{- if $existingSecret }}
data:
  {{- range $key, $value := $existingSecret.data }}
  {{ $key }}: {{ $value }}
  {{- end }}
{{- else }}
stringData:
  # PostgreSQL password
  {{- if .Values.postgres.enabled }}
  GEOPULSE_POSTGRES_PASSWORD: {{ .Values.secrets.postgres.password | default (randAlphaNum 32) | quote }}
  {{- else if .Values.externalPostgres.password }}
  GEOPULSE_POSTGRES_PASSWORD: {{ .Values.externalPostgres.password | quote }}
  {{- end }}

  # MQTT password (always set, empty if mosquitto disabled)
  {{- if .Values.mosquitto.enabled }}
  GEOPULSE_MQTT_PASSWORD: {{ .Values.secrets.mosquitto.password | default (randAlphaNum 32) | quote }}
  {{- else }}
  GEOPULSE_MQTT_PASSWORD: ""
  {{- end }}

  {{- if .Values.config.oidc.google.enabled }}
  # Google OIDC client secret
  GEOPULSE_OIDC_GOOGLE_CLIENT_SECRET: {{ .Values.config.oidc.google.clientSecret | quote }}
  {{- end }}

  {{- if .Values.config.oidc.microsoft.enabled }}
  # Microsoft OIDC client secret
  GEOPULSE_OIDC_MICROSOFT_CLIENT_SECRET: {{ .Values.config.oidc.microsoft.clientSecret | quote }}
  {{- end }}

  {{- if .Values.config.oidc.generic.enabled }}
  # Generic OIDC client secret
  GEOPULSE_OIDC_GENERIC_CLIENT_SECRET: {{ .Values.config.oidc.generic.clientSecret | quote }}
  {{- end }}
{{- end }}
{{- end }}